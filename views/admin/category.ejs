<%- include('common/header') %>

<div class="main-content" id="mainContent">
  <div class="container-fluid mt-4">
    <h2>Category Management</h2>

    <!-- Toast container (bottom-right) -->
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1080;">
      <% if (success_msg) { %>
        <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="d-flex">
            <div class="toast-body"><%= success_msg %></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
          </div>
        </div>
      <% } %>

      <% if (error_msg) { %>
        <div id="errorToast" class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="d-flex">
            <div class="toast-body"><%= error_msg %></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
          </div>
        </div>
      <% } %>
    </div>
    <script>
  document.addEventListener("DOMContentLoaded", function () {
    // Success Toast
   ` <% if (success_msg && success_msg.length > 0) { %>
      var successToast = new bootstrap.Toast(document.getElementById("successToast"));
      successToast.show();
    <% } %>

    // Error Toast
    <% if (error_msg && error_msg.length > 0) { %>
      var errorToast = new bootstrap.Toast(document.getElementById("errorToast"));
      errorToast.show();
    <% } %>`
  });
</script>


    <!-- Add Category -->
    <form id="addCategoryForm" action="/admin/category/create" method="POST" class="row g-3 mb-4">
      <div class="col-md-5">
        <input type="text" id="categoryNameInput" name="name" class="form-control" placeholder="Category Name" required>
      </div>
      <div class="col-md-3">
        <select name="status" class="form-control">
          <option value="active">Active</option>
          <option value="inactive">Inactive</option>
        </select>
      </div>
      <div class="col-md-2">
        <button type="submit" class="btn btn-success w-100">
          <i class="fas fa-plus"></i> Add
        </button>
      </div>
    </form>

    <!-- Search -->
    <div class="mb-3">
      <input type="text" id="searchInput" class="form-control" placeholder="Search categories...">
    </div>

    <!-- Table -->
    <table class="table table-bordered table-striped">
      <thead>
        <tr>
          <th>#</th>
          <th>Name</th>
          <th>Status</th>
          <th style="width: 140px;">Actions</th>
        </tr>
      </thead>
      <tbody id="categoryTable">
        <% categories.slice().reverse().forEach((cat, index) => { %>
          <tr>
            <td><%= index + 1 %></td>
            <td><%= cat.name %></td>
            <td><%= cat.status %></td>
            <td>
              <!-- Edit Button -->
              <button type="button" class="btn btn-sm btn-primary editBtn"
                data-id="<%= cat._id %>"
                data-name="<%= cat.name %>"
                data-status="<%= cat.status %>"
                title="Edit">
                <i class="fas fa-edit"></i>
              </button>

              <!-- Delete (POST) -->
              <form action="/admin/category/delete/<%= cat._id %>" method="POST" class="d-inline">
                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Delete this category?')" title="Delete">
                  <i class="fas fa-trash-alt"></i>
                </button>
              </form>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
</div>

<!-- Edit Modal (single modal reused for all records) -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <!-- NOTE: form.action will be set dynamically in JS to include the id -->
    <form id="editCategoryForm" action="#" method="POST" class="modal-content">
      <input type="hidden" name="id" id="editId">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title">Edit Category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label for="editName" class="form-label">Name</label>
          <input type="text" id="editName" name="name" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="editStatus" class="form-label">Status</label>
          <select id="editStatus" name="status" class="form-control">
            <option value="active">Active</option>
            <option value="inactive">Inactive</option>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="submit" class="btn btn-success">
          <i class="fas fa-save"></i> Update
        </button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          <i class="fas fa-times"></i> Cancel
        </button>
      </div>
    </form>
  </div>
</div>

<!-- include Bootstrap JS and FontAwesome (make sure header doesn't already include them) -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/js/all.min.js" defer></script>

<script>
document.addEventListener('DOMContentLoaded', function () {
  // ----- SHOW TOASTS (if present) -----
  const successToastEl = document.getElementById('successToast');
  if (successToastEl) {
    new bootstrap.Toast(successToastEl, { delay: 3500 }).show();
  }
  const errorToastEl = document.getElementById('errorToast');
  if (errorToastEl) {
    new bootstrap.Toast(errorToastEl, { delay: 5000 }).show();
  }

  // ----- SEARCH (client-side) -----
  const searchInput = document.getElementById('searchInput');
  searchInput.addEventListener('input', function () {
    const filter = this.value.trim().toLowerCase();
    document.querySelectorAll('#categoryTable tr').forEach(row => {
      const text = row.textContent.trim().toLowerCase();
      row.style.display = text.includes(filter) ? '' : 'none';
    });
  });

  // ----- DUPLICATE CHECK FOR ADD -----
  const addForm = document.getElementById('addCategoryForm');
  addForm.addEventListener('submit', function (e) {
    const newName = document.getElementById('categoryNameInput').value.trim().toLowerCase();
    if (!newName) return; // let required attribute handle empty
    let exists = false;
    document.querySelectorAll('#categoryTable tr').forEach(row => {
      const name = row.cells[0].textContent.trim().toLowerCase();
      if (name === newName) exists = true;
    });
    if (exists) {
      e.preventDefault();
      // show a toast-style alert fallback
      alert('Category already exists!');
    }
  });

  // ----- EDIT: populate modal & set form action -----
  const editModalEl = document.getElementById('editModal');
  const editModal = new bootstrap.Modal(editModalEl);
  const editForm = document.getElementById('editCategoryForm');
  const editIdInput = document.getElementById('editId');
  const editNameInput = document.getElementById('editName');
  const editStatusInput = document.getElementById('editStatus');

  // Keep original name on modal open to prevent false-positive duplicate check
  let originalEditName = '';

  document.querySelectorAll('.editBtn').forEach(btn => {
    btn.addEventListener('click', function () {
      const id = this.dataset.id;
      const name = this.dataset.name;
      const status = this.dataset.status;

      editIdInput.value = id;
      editNameInput.value = name;
      editStatusInput.value = status;
      originalEditName = name.trim().toLowerCase();

      // set form action to include id (matches route /admin/category/update/:id)
      editForm.action = `/admin/category/update/${id}`;

      // show modal
      editModal.show();
    });
  });

  // ----- DUPLICATE CHECK FOR EDIT -----
  editForm.addEventListener('submit', function (e) {
    const newName = editNameInput.value.trim().toLowerCase();
    if (!newName) return; // required will prevent empty
    let exists = false;
    document.querySelectorAll('#categoryTable tr').forEach(row => {
      const name = row.cells[0].textContent.trim().toLowerCase();
      // if name matches some other row (not the original), it's a duplicate
      if (name === newName && newName !== originalEditName) exists = true;
    });
    if (exists) {
      e.preventDefault();
      alert('Category already exists!');
    }
  });
});
</script>
<%- include('common/footer') %>